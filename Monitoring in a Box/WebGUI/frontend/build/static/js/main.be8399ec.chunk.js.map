{"version":3,"sources":["components/Login.js","components/MainBody/SystemSettings/Prometheus_Endpoints.js","components/MainBody/SystemSettings/Prometheus_Rules.js","components/MainBody/SystemSettings/Alertmanager_Config.js","components/MainBody/SystemSettings/SystemSettings.js","components/MainBody/AccountSettings/AccountSettings.js","components/MainBody/MainBody.js","components/SidePane/Logout.js","components/SidePane/Clock.js","components/SidePane/NavigationMenu.js","components/SidePane/SidePane.js","components/BackgroundService.js","components/PopupService/PopupService.js","components/Session.js","App.js","serviceWorker.js","index.js","images/favicon.ico","images/coverphoto.jpg","settings.js"],"names":["Login","props","login","bind","state","redirect","session_checked","loadSpinner","feedback","feedback2","checkSessionKey","this","window","localStorage","payload","session_key","context","$","ajax","type","url","SETTINGS","BACKEND_WS_VALIDATE_SESSION_URL","data","JSON","stringify","cache","dataType","contentType","success","status","res","parse","setGlobalState","is_admin","username","setState","error","xhr","ajaxOptions","thrownError","console","log","event","value","password","BACKEND_WS_LOGIN_URL","complete","preventDefault","to","icon","spin","id","style","color","src","logo","alt","onSubmit","className","placeholder","renderFeedback","renderRedirect","renderContents","React","Component","ajax_retrievePrometheusEndpoints_timer","Prometheus_Endpoints","onChange","fileContents","initialized","isDisplaying","displayTimestamp","Date","now","minApiDelayMS","globalState","systemSettingsNavState","prometheus_endpoints_selected","prometheusEndpointsApiQueue_retrieveData","socket_prometheus_endpoints_updated","mode","clearTimeout","setTimeout","retrieveData","file_name","setPopupState","popup1","show","title","content","fontSize","margin","display","hasCloseBtn","BACKEND_WS_GET_FILE_CONTENTS","displayFileContents","popupConfirmation","yesCallback","uploadData","yesButtonValue","noCallback","noButtonValue","tmpContents","contents","BACKEND_WS_UPDATE_FILE_CONTENTS","reloadService","service_name","BACKEND_WS_RELOAD_SERVICE","onValueChange","code","highlight","padding","fontFamily","backgroundColor","height","float","marginLeft","onClick","reloadServiceConfirmation","uploadDataConfirmation","ajax_retrievePrometheusRules_timer","Prometheus_Rules","prometheus_rules_selected","prometheusRulesApiQueue_retrieveData","socket_prometheus_rules_updated","ajax_retrieveAlertmanagerConfig_timer","Alertmanager_Config","alertmanager_config_selected","alertmanagerConfigApiQueue_retrieveData","socket_alertmanager_config_updated","SystemSettings","makeSelection","nav","systemSettings_selected","selection","newnav","key","target","classname","idx","transitionDelay","transitionDuration","transitionProperty","getButtonClass","getButtonStyle","position","marginRight","getDivClass","renderMenuBars","renderContent","AccountSettings","changePassword","showChangePassword","secrets","each","index","val","prevState","oldPassword","newPassword","newPassword2","accountSettings_selected","old_password","new_password","BACKEND_WS_CHANGE_PASSWORD","handleChangePasswordBtnClick","handleChangePasswordSubmitClick","renderChangePasswordDiv","MainBody","coverphoto","determineClass","Logout","logout","BACKEND_WS_LOGOUT_URL","Clock","time","toLocaleString","intervalID","setInterval","tick","clearInterval","NavigationMenu","renderSystemSettings","renderAccountSettings","SidePane","exact","path","render","BackgroundService","socket","socketIOClient","WEB_SOCKET_URL","on","handleServerHasUpdate","hasUpdate","BACKEND_WS_GET_ROOMS_LIST","processRoomData","getRoomInfo","PopupService","tmpState","popupState","popup2","xBtnCallback","headerClass","contentClass","renderXBtn","enable","fontWeight","open","onClose","closePopup1","closeOnDocumentClick","contentStyle","borderRadius","border","background","width","renderPopup","closePopup2","closePopupConfirmation","renderPopupConfirmation","Session","redirectToLoginPage","library","add","faCheckSquare","faCoffee","faSpinner","faPollH","faDoorOpen","faCalendarDay","faCalendarWeek","faCalendar","faCalendarAlt","faFileUpload","faIdCard","faLock","faStar","faSlidersH","faFileDownload","faCogs","faDownload","faEdit","faMapMarkerAlt","faExclamationTriangle","App","setStateFromChild","childname","MODE","setPopupStateFromChild","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","backend_server_url","protocol","indexOf","split","extractServerUrl","href","BACKEND_SERVER_URL","FIRST_AVAILABLE_HOUR","LAST_AVAILABLE_HOUR"],"mappings":"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","file":"static/js/main.be8399ec.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/favicon.ico';\nimport $ from 'jquery';\nimport { Redirect } from 'react-router-dom';\nimport SETTINGS from '../settings';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default class Login extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.login = this.login.bind(this);\n\t\tthis.state = {\n\t\t\tredirect: false,\n\t\t\tsession_checked: false,\n\t\t\tloadSpinner: false,\n\t\t\tfeedback: '',\n\t\t\tfeedback2: '',\n\t\t};\n\t\tthis.checkSessionKey = this.checkSessionKey.bind(this);\n\t}\n\n    componentDidMount(){\n        this.checkSessionKey();\n    }\n\n\tcheckSessionKey(){\n\t    if (typeof(window.localStorage['session_key']) !== \"undefined\" && window.localStorage['session_key'] !== ''){\n\t        let payload = {\n                session_key: window.localStorage['session_key']\n            }\n            let context = this;\n            $.ajax({\n                type: \"POST\",\n                url: SETTINGS.BACKEND_WS_VALIDATE_SESSION_URL,\n                data: JSON.stringify(payload),\n                cache: false,\n                dataType: 'json',\n                contentType: 'application/json',\n                success: function(data){\n                    if (data.status === \"success\"){\n                        let res = JSON.parse(data.res);\n                        context.props.setGlobalState({\n                            is_admin: res['is_admin'],\n                            username: res['username'],\n                            session_checked: true,\n                        }, \"Login\");\n                        context.setState({\n                            redirect: true\n                        });\n                    }else{\n                        window.localStorage['session_key'] = \"\";\n                        context.setState({\n                            session_checked: true\n                        });\n                    }\n                },\n                error: function (xhr, ajaxOptions, thrownError) {\n                    console.log(\"failed!\");\n                    window.localStorage['session_key'] = \"\";\n                    context.setState({\n                        session_checked: true\n                    });\n                }\n            });\n\t    }else{\n\t        this.setState({\n                session_checked: true\n            });\n\t    }\n\t}\n\n\tlogin(event){\n\t    //Reset feedback div\n\t    this.setState({\n\t        loadSpinner: true,\n\t        feedback: '',\n\t        feedback2: '',\n\t    });\n\n        //Get user input\n\t\tlet payload = {\n\t\t\tusername: $('#username')[0].value,\n\t\t\tpassword: $('#password')[0].value\n\t\t}\n\n\t\tlet context = this;\n\t\t$.ajax({\n\t\t\ttype: \"POST\",\n\t\t\turl: SETTINGS.BACKEND_WS_LOGIN_URL,\n\t\t\tdata: JSON.stringify(payload),\n\t\t\tcache: false,\n\t\t\tdataType: 'json',\n            contentType: 'application/json',\n\t\t\tsuccess: function(data){\n\t\t\t\tif (data.status === \"success\"){\n\t\t\t\t    let res = JSON.parse(data.res);\n\t\t\t\t    //Store session_key locally\n\t\t\t\t    window.localStorage['session_key'] = res['session_key'];\n\t\t\t\t    context.props.setGlobalState({\n\t\t\t\t        is_admin: res['is_admin'],\n\t\t\t\t        username: res['username']\n\t\t\t\t    });\n\t\t\t\t\tcontext.setState({\n\t\t\t\t\t\tredirect: true,\n\t\t\t\t\t});\n\t\t\t\t}else{\n\t\t\t\t    let res = JSON.parse(data.res);\n\n\t\t\t\t    context.setState({\n\t\t\t\t        feedback: (res['error_code'] !== 0 ? \"Error: \" + res['error_code'] : \"\"),\n                        feedback2: (typeof(res['status']) !== \"undefined\" ? res['status'] : \"\"),\n                        loadSpinner: false,\n\t\t\t\t    });\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function (xhr, ajaxOptions, thrownError) {\n\t\t\t    context.setState({\n                    feedback: \"Request failed\",\n                    loadSpinner: false,\n                });\n\t\t\t\t//$('#feedback').html();\n\t\t\t},\n\t\t\tcomplete: function () {\n\n\t\t\t},\n\n\t\t});\n\t\tevent.preventDefault();\n\t}\n\t\n\trenderRedirect(){\n\t\tif (this.state.redirect) {\n\t\t\treturn <Redirect to='/main' />\n\t\t}\n\t}\n\n    renderFeedback(){\n        if (this.state.loadSpinner){\n            return (\n                <FontAwesomeIcon icon=\"spinner\" spin />\n            )\n        }else{\n            return (\n                <>\n                    <p id=\"feedback\" style={{color:'yellow'}}>{this.state.feedback}<br/>{this.state.feedback2}</p>\n                </>\n            )\n        }\n    }\n\trenderContents(){\n\t\tif (this.state.session_checked) {\n\t\t\treturn(\n\t\t\t    <div>\n                    <img src={logo} alt=\"logo\"/>\n                    <div id='loginContainer'>\n                        <form onSubmit={this.login}>\n                            <input className='login_input' id=\"username\" type=\"text\"\n                                placeholder=\"Employee ID\"/>\n                            <br/>\n                            <input className='login_input' id=\"password\" type=\"password\"\n                                placeholder=\"Password\"/>\n                            <br/>\n                            <button className='login_input' id='submit' >Sign in</button>\n                        </form>\n                        {this.renderFeedback()}\n                    </div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n\t\n\trender(){ \n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.renderRedirect()}\n                {this.renderContents()}\n\t\t\t</div>\n\t\t)\n\t}\n}","import React from 'react';\r\nimport $ from 'jquery';\r\nimport SETTINGS from '../../../settings';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Editor from 'react-simple-code-editor';\r\n\r\nvar ajax_retrievePrometheusEndpoints_timer = null;\r\n\r\n\r\nexport default class Prometheus_Endpoints extends React.Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t    initialized: false,\r\n\t\t    isDisplaying: false,\r\n\t\t    displayTimestamp: Date.now(),\r\n\t\t    minApiDelayMS: 500, //500ms\r\n\t\t    fileContents: \"\",\r\n\t\t};\r\n\t}\r\n\r\n    onChange = (value) => {\r\n        this.setState({fileContents: value});\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        if (typeof(this.props.globalState) !== 'undefined'){\r\n            if (this.props.systemSettingsNavState.prometheus_endpoints_selected !== this.state.isDisplaying){\r\n                this.setState({\r\n                    isDisplaying : this.props.systemSettingsNavState.prometheus_endpoints_selected,\r\n                    displayTimestamp: Date.now(),\r\n                });\r\n\r\n                if (this.props.systemSettingsNavState.prometheus_endpoints_selected && !this.state.initialized){\r\n                    this.prometheusEndpointsApiQueue_retrieveData(0);\r\n                    this.setState({\r\n                        initialized: true,\r\n                    });\r\n                }\r\n            }\r\n            if (this.state.isDisplaying && this.state.initialized && this.props.globalState.socket_prometheus_endpoints_updated){\r\n                this.prometheusEndpointsApiQueue_retrieveData(0);\r\n                this.props.setGlobalState({\r\n                    socket_prometheus_endpoints_updated: false,\r\n                }, \"Prometheus_Endpoints\");\r\n            }\r\n        }\r\n    }\r\n\r\n    prometheusEndpointsApiQueue_retrieveData(mode){\r\n        let context = this;\r\n        clearTimeout(ajax_retrievePrometheusEndpoints_timer);  //reset ajax call timer\r\n        ajax_retrievePrometheusEndpoints_timer = setTimeout(function(){\r\n            context.retrieveData(mode)}\r\n        , context.state.minApiDelayMS);\r\n    }\r\n\r\n    retrieveData(mode){\r\n        let payload = {\r\n            session_key: window.localStorage['session_key'],\r\n            file_name: (mode === 1 ? 'prometheus_endpoints' : \"prometheus_endpoints_draft\"),\r\n        }\r\n        console.log(payload);\r\n        let context = this;\r\n\r\n        //Show spinner in popup\r\n        this.props.setPopupState({\r\n            popup1: {\r\n                show: true,\r\n                title: 'Loading',\r\n                content: <FontAwesomeIcon icon=\"spinner\" spin style={{fontSize: '2em', margin: 'auto', display: 'block'}}/>,\r\n                mode: 'common',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Prometheus_Endpoints\");\r\n\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: SETTINGS.BACKEND_WS_GET_FILE_CONTENTS,\r\n            data: JSON.stringify(payload),\r\n            cache: false,\r\n            dataType: 'json',\r\n            contentType: 'application/json',\r\n            success: function(data){\r\n                console.log(data);\r\n                if (data.status === \"success\"){\r\n                    let res = JSON.parse(data.res);\r\n                    context.displayFileContents(res.status);\r\n                }else{\r\n\r\n                }\r\n            },\r\n            error: function (xhr, ajaxOptions, thrownError) {\r\n                console.log(\"failed!\");\r\n            },complete: function(){\r\n                setTimeout(function(){\r\n                    //remove spinner popup\r\n                    context.props.setPopupState({\r\n                        popup1: {\r\n                            show: false,\r\n                            title: '',\r\n                            content: '',\r\n                            mode: 'common',\r\n                            hasCloseBtn: true,\r\n                        }\r\n                    }, \"Prometheus_Endpoints\");\r\n                }, 500);\r\n            }\r\n        });\r\n    }\r\n\r\n    uploadDataConfirmation(){\r\n        this.props.setPopupState({\r\n            popupConfirmation: {\r\n                show: true,\r\n                title: 'Proceed to save?',\r\n                yesCallback: this.uploadData.bind(this),\r\n                yesButtonValue: '',\r\n                noCallback: 'close',\r\n                noButtonValue: '',\r\n                mode: 'admin',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Prometheus_Endpoints\");\r\n    }\r\n\r\n    uploadData(){\r\n        let tmpContents = this.state.fileContents;\r\n        let payload = {\r\n            session_key: window.localStorage['session_key'],\r\n            file_name: 'prometheus_endpoints_draft',\r\n            contents: tmpContents,\r\n        }\r\n        let context = this;\r\n\r\n        //Close confirmation popup\r\n        this.props.setPopupState({\r\n            popupConfirmation: {\r\n                show: false,\r\n                title: '',\r\n                yesCallback: '',\r\n                yesButtonValue: '',\r\n                noCallback: '',\r\n                noButtonValue: '',\r\n                mode: 'admin',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Prometheus_Endpoints\");\r\n\r\n        //Show spinner in popup\r\n        this.props.setPopupState({\r\n            popup1: {\r\n                show: true,\r\n                title: 'Loading',\r\n                content: <FontAwesomeIcon icon=\"spinner\" spin style={{fontSize: '2em', margin: 'auto', display: 'block'}}/>,\r\n                mode: 'common',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Prometheus_Endpoints\");\r\n\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: SETTINGS.BACKEND_WS_UPDATE_FILE_CONTENTS,\r\n            data: JSON.stringify(payload),\r\n            cache: false,\r\n            dataType: 'json',\r\n            contentType: 'application/json',\r\n            success: function(data){\r\n                if (data.status === \"success\"){\r\n                    let res = JSON.parse(data.res);\r\n                    //show success popup\r\n                    context.props.setPopupState({\r\n                        popup1: {\r\n                            show: true,\r\n                            title: 'Updated',\r\n                            content: '',\r\n                            mode: 'admin',\r\n                            hasCloseBtn: true,\r\n                        }\r\n                    }, \"Prometheus_Endpoints\");\r\n                }else{\r\n\r\n                }\r\n            },\r\n            error: function (xhr, ajaxOptions, thrownError) {\r\n                console.log(\"failed!\");\r\n            },complete: function(){\r\n                setTimeout(function(){\r\n                    //remove spinner popup\r\n                    context.props.setPopupState({\r\n                        popup1: {\r\n                            show: false,\r\n                            title: '',\r\n                            content: '',\r\n                            mode: 'common',\r\n                            hasCloseBtn: true,\r\n                        }\r\n                    }, \"Prometheus_Endpoints\");\r\n                }, 500);\r\n            }\r\n        });\r\n    }\r\n\r\n    reloadServiceConfirmation(){\r\n        this.props.setPopupState({\r\n            popupConfirmation: {\r\n                show: true,\r\n                title: 'Proceed to apply?',\r\n                yesCallback: this.reloadService.bind(this),\r\n                yesButtonValue: '',\r\n                noCallback: 'close',\r\n                noButtonValue: '',\r\n                mode: 'admin',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Prometheus_Endpoints\");\r\n    }\r\n\r\n    reloadService(){\r\n        let payload = {\r\n            session_key: window.localStorage['session_key'],\r\n            service_name: 'reload_prometheus_endpoints',\r\n        }\r\n        let context = this;\r\n\r\n        //Close confirmation popup\r\n        this.props.setPopupState({\r\n            popupConfirmation: {\r\n                show: false,\r\n                title: '',\r\n                mode: 'admin',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Prometheus_Endpoints\");\r\n\r\n        //Show spinner in popup\r\n        this.props.setPopupState({\r\n            popup1: {\r\n                show: true,\r\n                title: 'Loading',\r\n                content: <FontAwesomeIcon icon=\"spinner\" spin style={{fontSize: '2em', margin: 'auto', display: 'block'}}/>,\r\n                mode: 'common',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Prometheus_Endpoints\");\r\n\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: SETTINGS.BACKEND_WS_RELOAD_SERVICE,\r\n            data: JSON.stringify(payload),\r\n            cache: false,\r\n            dataType: 'json',\r\n            contentType: 'application/json',\r\n            success: function(data){\r\n                if (data.status === \"success\"){\r\n                    let res = JSON.parse(data.res);\r\n                    if (res.status === 0){\r\n                        //show success popup\r\n                        context.props.setPopupState({\r\n                            popup1: {\r\n                                show: true,\r\n                                title: 'Reloaded',\r\n                                content: '',\r\n                                mode: 'admin',\r\n                                hasCloseBtn: true,\r\n                            }\r\n                        }, \"Prometheus_Endpoints\");\r\n                    }else if (res.status === 1){\r\n                        //show failure popup\r\n                        context.props.setPopupState({\r\n                            popup1: {\r\n                                show: true,\r\n                                title: 'Failed to reload',\r\n                                content: 'The new configuration is rejected by the server!',\r\n                                mode: 'admin',\r\n                                hasCloseBtn: true,\r\n                            }\r\n                        }, \"Prometheus_Endpoints\");\r\n                    }else{\r\n                        //show failure popup\r\n                        context.props.setPopupState({\r\n                            popup1: {\r\n                                show: true,\r\n                                title: 'Failed to reload',\r\n                                content: 'Server script has error(s)!',\r\n                                mode: 'admin',\r\n                                hasCloseBtn: true,\r\n                            }\r\n                        }, \"Prometheus_Endpoints\");\r\n                    }\r\n                }else{\r\n\r\n                }\r\n            },\r\n            error: function (xhr, ajaxOptions, thrownError) {\r\n                console.log(\"failed!\");\r\n                //show failure popup\r\n                context.props.setPopupState({\r\n                    popup1: {\r\n                        show: true,\r\n                        title: 'Failed to reload',\r\n                        content: 'Unable to connect to server or the server has an internal error!',\r\n                        mode: 'admin',\r\n                        hasCloseBtn: true,\r\n                    }\r\n                }, \"Prometheus_Endpoints\");\r\n            },complete: function(){\r\n                /*setTimeout(function(){\r\n                    //remove spinner popup\r\n                    context.props.setPopupState({\r\n                        popup1: {\r\n                            show: false,\r\n                            title: '',\r\n                            content: '',\r\n                            mode: 'common',\r\n                            hasCloseBtn: true,\r\n                        }\r\n                    }, \"Prometheus_Endpoints\");\r\n                }, 500);*/\r\n            }\r\n        });\r\n    }\r\n\r\n    displayFileContents(fileContents){\r\n        let context = this;\r\n        this.setState({\r\n            fileContents: fileContents,\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='MainContentWrapper'>\r\n                <p className='MainContentTitle2'>Prometheus Endpoints</p>\r\n                <div className='MainContentBody'>\r\n                    <div id='parameters-table-div'>\r\n                        <Editor\r\n                            value={this.state.fileContents}\r\n                            onValueChange={code => this.onChange(code)}\r\n                            highlight={code => function(){} }\r\n                            padding={10}\r\n                            style={{\r\n                              fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n                              fontSize: 14,\r\n                              backgroundColor:'#fafafa',\r\n                              height: '90%',\r\n                              color:'black'\r\n                            }}\r\n                        />\r\n                        <button className='BlueSubmitBtn' id='uploadBtn'\r\n                            style={{float:'right', marginLeft:'10px'}}\r\n                            onClick={this.reloadServiceConfirmation.bind(this)}\r\n                        >\r\n                        Apply draft and Reload Prometheus\r\n                        </button>\r\n                        <button className='GreenSubmitBtn' id='uploadBtn'\r\n                            style={{float:'right', marginLeft:'10px'}}\r\n                            onClick={this.uploadDataConfirmation.bind(this)}\r\n                        >\r\n                        Save draft\r\n                        </button>\r\n                        <button className='GreySubmitBtn' id='uploadBtn'\r\n                            style={{float:'right', marginLeft:'10px'}}\r\n                            onClick={function(){this.prometheusEndpointsApiQueue_retrieveData(0)}.bind(this)}\r\n                        >\r\n                        Retrieve saved draft\r\n                        </button>\r\n                        <button className='GreySubmitBtn' id='uploadBtn'\r\n                            style={{float:'right'}}\r\n                            onClick={function(){this.prometheusEndpointsApiQueue_retrieveData(1)}.bind(this)}\r\n                        >\r\n                        Retrieve last applied config\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport $ from 'jquery';\r\nimport SETTINGS from '../../../settings';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Editor from 'react-simple-code-editor';\r\n\r\nvar ajax_retrievePrometheusRules_timer = null;\r\n\r\n\r\nexport default class Prometheus_Rules extends React.Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t    initialized: false,\r\n\t\t    isDisplaying: false,\r\n\t\t    displayTimestamp: Date.now(),\r\n\t\t    minApiDelayMS: 500, //500ms\r\n\t\t    fileContents: \"\",\r\n\t\t};\r\n\t}\r\n\r\n    onChange = (value) => {\r\n        this.setState({fileContents: value});\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        if (typeof(this.props.globalState) !== 'undefined'){\r\n            if (this.props.systemSettingsNavState.prometheus_rules_selected !== this.state.isDisplaying){\r\n                this.setState({\r\n                    isDisplaying : this.props.systemSettingsNavState.prometheus_rules_selected,\r\n                    displayTimestamp: Date.now(),\r\n                });\r\n\r\n                if (this.props.systemSettingsNavState.prometheus_rules_selected && !this.state.initialized){\r\n                    this.prometheusRulesApiQueue_retrieveData(0);\r\n                    this.setState({\r\n                        initialized: true,\r\n                    });\r\n                }\r\n            }\r\n            if (this.state.isDisplaying && this.state.initialized && this.props.globalState.socket_prometheus_rules_updated){\r\n                this.prometheusRulesApiQueue_retrieveData(0);\r\n                this.props.setGlobalState({\r\n                    socket_prometheus_rules_updated: false,\r\n                }, \"Prometheus_Rules\");\r\n            }\r\n        }\r\n    }\r\n\r\n    prometheusRulesApiQueue_retrieveData(mode){\r\n        let context = this;\r\n        clearTimeout(ajax_retrievePrometheusRules_timer);  //reset ajax call timer\r\n        ajax_retrievePrometheusRules_timer = setTimeout(function(){\r\n            context.retrieveData(mode)}\r\n        , context.state.minApiDelayMS);\r\n    }\r\n\r\n    retrieveData(mode){\r\n        let payload = {\r\n            session_key: window.localStorage['session_key'],\r\n            file_name: (mode === 1 ? 'prometheus_rules' : \"prometheus_rules_draft\"),\r\n        }\r\n        console.log(payload);\r\n        let context = this;\r\n\r\n        //Show spinner in popup\r\n        this.props.setPopupState({\r\n            popup1: {\r\n                show: true,\r\n                title: 'Loading',\r\n                content: <FontAwesomeIcon icon=\"spinner\" spin style={{fontSize: '2em', margin: 'auto', display: 'block'}}/>,\r\n                mode: 'common',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Prometheus_Rules\");\r\n\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: SETTINGS.BACKEND_WS_GET_FILE_CONTENTS,\r\n            data: JSON.stringify(payload),\r\n            cache: false,\r\n            dataType: 'json',\r\n            contentType: 'application/json',\r\n            success: function(data){\r\n                console.log(data);\r\n                if (data.status === \"success\"){\r\n                    let res = JSON.parse(data.res);\r\n                    context.displayFileContents(res.status);\r\n                }else{\r\n\r\n                }\r\n            },\r\n            error: function (xhr, ajaxOptions, thrownError) {\r\n                console.log(\"failed!\");\r\n            },complete: function(){\r\n                setTimeout(function(){\r\n                    //remove spinner popup\r\n                    context.props.setPopupState({\r\n                        popup1: {\r\n                            show: false,\r\n                            title: '',\r\n                            content: '',\r\n                            mode: 'common',\r\n                            hasCloseBtn: true,\r\n                        }\r\n                    }, \"Prometheus_Rules\");\r\n                }, 500);\r\n            }\r\n        });\r\n    }\r\n\r\n    uploadDataConfirmation(){\r\n        this.props.setPopupState({\r\n            popupConfirmation: {\r\n                show: true,\r\n                title: 'Proceed to save?',\r\n                yesCallback: this.uploadData.bind(this),\r\n                yesButtonValue: '',\r\n                noCallback: 'close',\r\n                noButtonValue: '',\r\n                mode: 'admin',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Prometheus_Rules\");\r\n    }\r\n\r\n    uploadData(){\r\n        let tmpContents = this.state.fileContents;\r\n        let payload = {\r\n            session_key: window.localStorage['session_key'],\r\n            file_name: 'prometheus_rules_draft',\r\n            contents: tmpContents,\r\n        }\r\n        let context = this;\r\n\r\n        //Close confirmation popup\r\n        this.props.setPopupState({\r\n            popupConfirmation: {\r\n                show: false,\r\n                title: '',\r\n                yesCallback: '',\r\n                yesButtonValue: '',\r\n                noCallback: '',\r\n                noButtonValue: '',\r\n                mode: 'admin',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Prometheus_Rules\");\r\n\r\n        //Show spinner in popup\r\n        this.props.setPopupState({\r\n            popup1: {\r\n                show: true,\r\n                title: 'Loading',\r\n                content: <FontAwesomeIcon icon=\"spinner\" spin style={{fontSize: '2em', margin: 'auto', display: 'block'}}/>,\r\n                mode: 'common',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Prometheus_Rules\");\r\n\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: SETTINGS.BACKEND_WS_UPDATE_FILE_CONTENTS,\r\n            data: JSON.stringify(payload),\r\n            cache: false,\r\n            dataType: 'json',\r\n            contentType: 'application/json',\r\n            success: function(data){\r\n                if (data.status === \"success\"){\r\n                    let res = JSON.parse(data.res);\r\n                    //show success popup\r\n                    context.props.setPopupState({\r\n                        popup1: {\r\n                            show: true,\r\n                            title: 'Updated',\r\n                            content: '',\r\n                            mode: 'admin',\r\n                            hasCloseBtn: true,\r\n                        }\r\n                    }, \"Prometheus_Rules\");\r\n                }else{\r\n\r\n                }\r\n            },\r\n            error: function (xhr, ajaxOptions, thrownError) {\r\n                console.log(\"failed!\");\r\n            },complete: function(){\r\n                setTimeout(function(){\r\n                    //remove spinner popup\r\n                    context.props.setPopupState({\r\n                        popup1: {\r\n                            show: false,\r\n                            title: '',\r\n                            content: '',\r\n                            mode: 'common',\r\n                            hasCloseBtn: true,\r\n                        }\r\n                    }, \"Prometheus_Rules\");\r\n                }, 500);\r\n            }\r\n        });\r\n    }\r\n\r\n    reloadServiceConfirmation(){\r\n        this.props.setPopupState({\r\n            popupConfirmation: {\r\n                show: true,\r\n                title: 'Proceed to apply?',\r\n                yesCallback: this.reloadService.bind(this),\r\n                yesButtonValue: '',\r\n                noCallback: 'close',\r\n                noButtonValue: '',\r\n                mode: 'admin',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Prometheus_Rules\");\r\n    }\r\n\r\n    reloadService(){\r\n        let payload = {\r\n            session_key: window.localStorage['session_key'],\r\n            service_name: 'reload_prometheus_rules',\r\n        }\r\n        let context = this;\r\n\r\n        //Close confirmation popup\r\n        this.props.setPopupState({\r\n            popupConfirmation: {\r\n                show: false,\r\n                title: '',\r\n                mode: 'admin',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Prometheus_Rules\");\r\n\r\n        //Show spinner in popup\r\n        this.props.setPopupState({\r\n            popup1: {\r\n                show: true,\r\n                title: 'Loading',\r\n                content: <FontAwesomeIcon icon=\"spinner\" spin style={{fontSize: '2em', margin: 'auto', display: 'block'}}/>,\r\n                mode: 'common',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Prometheus_Rules\");\r\n\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: SETTINGS.BACKEND_WS_RELOAD_SERVICE,\r\n            data: JSON.stringify(payload),\r\n            cache: false,\r\n            dataType: 'json',\r\n            contentType: 'application/json',\r\n            success: function(data){\r\n                if (data.status === \"success\"){\r\n                    let res = JSON.parse(data.res);\r\n                    if (res.status === 0){\r\n                        //show success popup\r\n                        context.props.setPopupState({\r\n                            popup1: {\r\n                                show: true,\r\n                                title: 'Reloaded',\r\n                                content: '',\r\n                                mode: 'admin',\r\n                                hasCloseBtn: true,\r\n                            }\r\n                        }, \"Prometheus_Rules\");\r\n                    }else if (res.status === 1){\r\n                        //show failure popup\r\n                        context.props.setPopupState({\r\n                            popup1: {\r\n                                show: true,\r\n                                title: 'Failed to reload',\r\n                                content: 'The new configuration is rejected by the server!',\r\n                                mode: 'admin',\r\n                                hasCloseBtn: true,\r\n                            }\r\n                        }, \"Prometheus_Rules\");\r\n                    }else{\r\n                        //show failure popup\r\n                        context.props.setPopupState({\r\n                            popup1: {\r\n                                show: true,\r\n                                title: 'Failed to reload',\r\n                                content: 'Server script has error(s)!',\r\n                                mode: 'admin',\r\n                                hasCloseBtn: true,\r\n                            }\r\n                        }, \"Prometheus_Rules\");\r\n                    }\r\n                }else{\r\n\r\n                }\r\n            },\r\n            error: function (xhr, ajaxOptions, thrownError) {\r\n                console.log(\"failed!\");\r\n                //show failure popup\r\n                context.props.setPopupState({\r\n                    popup1: {\r\n                        show: true,\r\n                        title: 'Failed to reload',\r\n                        content: 'Unable to connect to server or the server has an internal error!',\r\n                        mode: 'admin',\r\n                        hasCloseBtn: true,\r\n                    }\r\n                }, \"Prometheus_Rules\");\r\n            },complete: function(){\r\n                /*setTimeout(function(){\r\n                    //remove spinner popup\r\n                    context.props.setPopupState({\r\n                        popup1: {\r\n                            show: false,\r\n                            title: '',\r\n                            content: '',\r\n                            mode: 'common',\r\n                            hasCloseBtn: true,\r\n                        }\r\n                    }, \"Prometheus_Rules\");\r\n                }, 500);*/\r\n            }\r\n        });\r\n    }\r\n\r\n    displayFileContents(fileContents){\r\n        let context = this;\r\n        this.setState({\r\n            fileContents: fileContents,\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='MainContentWrapper'>\r\n                <p className='MainContentTitle2'>Prometheus Rules</p>\r\n                <div className='MainContentBody'>\r\n                    <div id='parameters-table-div'>\r\n                        <Editor\r\n                            value={this.state.fileContents}\r\n                            onValueChange={code => this.onChange(code)}\r\n                            highlight={code => function(){} }\r\n                            padding={10}\r\n                            style={{\r\n                              fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n                              fontSize: 14,\r\n                              backgroundColor:'#fafafa',\r\n                              height: '90%',\r\n                              color:'black'\r\n                            }}\r\n                        />\r\n                        <button className='BlueSubmitBtn' id='uploadBtn'\r\n                            style={{float:'right', marginLeft:'10px'}}\r\n                            onClick={this.reloadServiceConfirmation.bind(this)}\r\n                        >\r\n                        Apply draft and Reload Prometheus\r\n                        </button>\r\n                        <button className='GreenSubmitBtn' id='uploadBtn'\r\n                            style={{float:'right', marginLeft:'10px'}}\r\n                            onClick={this.uploadDataConfirmation.bind(this)}\r\n                        >\r\n                        Save draft\r\n                        </button>\r\n                        <button className='GreySubmitBtn' id='uploadBtn'\r\n                            style={{float:'right', marginLeft:'10px'}}\r\n                            onClick={function(){this.prometheusRulesApiQueue_retrieveData(0)}.bind(this)}\r\n                        >\r\n                        Retrieve saved draft\r\n                        </button>\r\n                        <button className='GreySubmitBtn' id='uploadBtn'\r\n                            style={{float:'right'}}\r\n                            onClick={function(){this.prometheusRulesApiQueue_retrieveData(1)}.bind(this)}\r\n                        >\r\n                        Retrieve last applied config\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport $ from 'jquery';\r\nimport SETTINGS from '../../../settings';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport Editor from 'react-simple-code-editor';\r\n\r\nvar ajax_retrieveAlertmanagerConfig_timer = null;\r\n\r\n\r\nexport default class Alertmanager_Config extends React.Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t    initialized: false,\r\n\t\t    isDisplaying: false,\r\n\t\t    displayTimestamp: Date.now(),\r\n\t\t    minApiDelayMS: 500, //500ms\r\n\t\t    fileContents: \"\",\r\n\t\t};\r\n\t}\r\n\r\n    onChange = (value) => {\r\n        this.setState({fileContents: value});\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        if (typeof(this.props.globalState) !== 'undefined'){\r\n            if (this.props.systemSettingsNavState.alertmanager_config_selected !== this.state.isDisplaying){\r\n                this.setState({\r\n                    isDisplaying : this.props.systemSettingsNavState.alertmanager_config_selected,\r\n                    displayTimestamp: Date.now(),\r\n                });\r\n\r\n                if (this.props.systemSettingsNavState.alertmanager_config_selected && !this.state.initialized){\r\n                    this.alertmanagerConfigApiQueue_retrieveData(0);\r\n                    this.setState({\r\n                        initialized: true,\r\n                    });\r\n                }\r\n            }\r\n            if (this.state.isDisplaying && this.state.initialized && this.props.globalState.socket_alertmanager_config_updated){\r\n                this.alertmanagerConfigApiQueue_retrieveData(0);\r\n                this.props.setGlobalState({\r\n                    socket_alertmanager_config_updated: false,\r\n                }, \"Alertmanager_Config\");\r\n            }\r\n        }\r\n    }\r\n\r\n    alertmanagerConfigApiQueue_retrieveData(mode){\r\n        let context = this;\r\n        clearTimeout(ajax_retrieveAlertmanagerConfig_timer);  //reset ajax call timer\r\n        ajax_retrieveAlertmanagerConfig_timer = setTimeout(function(){\r\n            context.retrieveData(mode)}\r\n        , context.state.minApiDelayMS);\r\n    }\r\n\r\n    retrieveData(mode){\r\n        let payload = {\r\n            session_key: window.localStorage['session_key'],\r\n            file_name: (mode === 1 ? 'alertmanager_config' : \"alertmanager_config_draft\"),\r\n        }\r\n        console.log(payload);\r\n        let context = this;\r\n\r\n        //Show spinner in popup\r\n        this.props.setPopupState({\r\n            popup1: {\r\n                show: true,\r\n                title: 'Loading',\r\n                content: <FontAwesomeIcon icon=\"spinner\" spin style={{fontSize: '2em', margin: 'auto', display: 'block'}}/>,\r\n                mode: 'common',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Alertmanager_Config\");\r\n\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: SETTINGS.BACKEND_WS_GET_FILE_CONTENTS,\r\n            data: JSON.stringify(payload),\r\n            cache: false,\r\n            dataType: 'json',\r\n            contentType: 'application/json',\r\n            success: function(data){\r\n                console.log(data);\r\n                if (data.status === \"success\"){\r\n                    let res = JSON.parse(data.res);\r\n                    context.displayFileContents(res.status);\r\n                }else{\r\n\r\n                }\r\n            },\r\n            error: function (xhr, ajaxOptions, thrownError) {\r\n                console.log(\"failed!\");\r\n            },complete: function(){\r\n                setTimeout(function(){\r\n                    //remove spinner popup\r\n                    context.props.setPopupState({\r\n                        popup1: {\r\n                            show: false,\r\n                            title: '',\r\n                            content: '',\r\n                            mode: 'common',\r\n                            hasCloseBtn: true,\r\n                        }\r\n                    }, \"Alertmanager_Config\");\r\n                }, 500);\r\n            }\r\n        });\r\n    }\r\n\r\n    uploadDataConfirmation(){\r\n        this.props.setPopupState({\r\n            popupConfirmation: {\r\n                show: true,\r\n                title: 'Proceed to save?',\r\n                yesCallback: this.uploadData.bind(this),\r\n                yesButtonValue: '',\r\n                noCallback: 'close',\r\n                noButtonValue: '',\r\n                mode: 'admin',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Alertmanager_Config\");\r\n    }\r\n\r\n    uploadData(){\r\n        let tmpContents = this.state.fileContents;\r\n        let payload = {\r\n            session_key: window.localStorage['session_key'],\r\n            file_name: 'alertmanager_config_draft',\r\n            contents: tmpContents,\r\n        }\r\n        let context = this;\r\n\r\n        //Close confirmation popup\r\n        this.props.setPopupState({\r\n            popupConfirmation: {\r\n                show: false,\r\n                title: '',\r\n                yesCallback: '',\r\n                yesButtonValue: '',\r\n                noCallback: '',\r\n                noButtonValue: '',\r\n                mode: 'admin',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Alertmanager_Config\");\r\n\r\n        //Show spinner in popup\r\n        this.props.setPopupState({\r\n            popup1: {\r\n                show: true,\r\n                title: 'Loading',\r\n                content: <FontAwesomeIcon icon=\"spinner\" spin style={{fontSize: '2em', margin: 'auto', display: 'block'}}/>,\r\n                mode: 'common',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Alertmanager_Config\");\r\n\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: SETTINGS.BACKEND_WS_UPDATE_FILE_CONTENTS,\r\n            data: JSON.stringify(payload),\r\n            cache: false,\r\n            dataType: 'json',\r\n            contentType: 'application/json',\r\n            success: function(data){\r\n                if (data.status === \"success\"){\r\n                    let res = JSON.parse(data.res);\r\n                    //show success popup\r\n                    context.props.setPopupState({\r\n                        popup1: {\r\n                            show: true,\r\n                            title: 'Updated',\r\n                            content: '',\r\n                            mode: 'admin',\r\n                            hasCloseBtn: true,\r\n                        }\r\n                    }, \"Alertmanager_Config\");\r\n                }else{\r\n\r\n                }\r\n            },\r\n            error: function (xhr, ajaxOptions, thrownError) {\r\n                console.log(\"failed!\");\r\n            },complete: function(){\r\n                setTimeout(function(){\r\n                    //remove spinner popup\r\n                    context.props.setPopupState({\r\n                        popup1: {\r\n                            show: false,\r\n                            title: '',\r\n                            content: '',\r\n                            mode: 'common',\r\n                            hasCloseBtn: true,\r\n                        }\r\n                    }, \"Alertmanager_Config\");\r\n                }, 500);\r\n            }\r\n        });\r\n    }\r\n\r\n    reloadServiceConfirmation(){\r\n        this.props.setPopupState({\r\n            popupConfirmation: {\r\n                show: true,\r\n                title: 'Proceed to apply?',\r\n                yesCallback: this.reloadService.bind(this),\r\n                yesButtonValue: '',\r\n                noCallback: 'close',\r\n                noButtonValue: '',\r\n                mode: 'admin',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Alertmanager_Config\");\r\n    }\r\n\r\n    reloadService(){\r\n        let payload = {\r\n            session_key: window.localStorage['session_key'],\r\n            service_name: 'reload_alertmanager',\r\n        }\r\n        let context = this;\r\n\r\n        //Close confirmation popup\r\n        this.props.setPopupState({\r\n            popupConfirmation: {\r\n                show: false,\r\n                title: '',\r\n                mode: 'admin',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Alertmanager_Config\");\r\n\r\n        //Show spinner in popup\r\n        this.props.setPopupState({\r\n            popup1: {\r\n                show: true,\r\n                title: 'Loading',\r\n                content: <FontAwesomeIcon icon=\"spinner\" spin style={{fontSize: '2em', margin: 'auto', display: 'block'}}/>,\r\n                mode: 'common',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"Alertmanager_Config\");\r\n\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: SETTINGS.BACKEND_WS_RELOAD_SERVICE,\r\n            data: JSON.stringify(payload),\r\n            cache: false,\r\n            dataType: 'json',\r\n            contentType: 'application/json',\r\n            success: function(data){\r\n                if (data.status === \"success\"){\r\n                    let res = JSON.parse(data.res);\r\n                    if (res.status === 0){\r\n                        //show success popup\r\n                        context.props.setPopupState({\r\n                            popup1: {\r\n                                show: true,\r\n                                title: 'Reloaded',\r\n                                content: '',\r\n                                mode: 'admin',\r\n                                hasCloseBtn: true,\r\n                            }\r\n                        }, \"Alertmanager_Config\");\r\n                    }else if (res.status === 1){\r\n                        //show failure popup\r\n                        context.props.setPopupState({\r\n                            popup1: {\r\n                                show: true,\r\n                                title: 'Failed to reload',\r\n                                content: 'The new configuration is rejected by the server!',\r\n                                mode: 'admin',\r\n                                hasCloseBtn: true,\r\n                            }\r\n                        }, \"Alertmanager_Config\");\r\n                    }else{\r\n                        //show failure popup\r\n                        context.props.setPopupState({\r\n                            popup1: {\r\n                                show: true,\r\n                                title: 'Failed to reload',\r\n                                content: 'Server script has error(s)!',\r\n                                mode: 'admin',\r\n                                hasCloseBtn: true,\r\n                            }\r\n                        }, \"Alertmanager_Config\");\r\n                    }\r\n                }else{\r\n\r\n                }\r\n            },\r\n            error: function (xhr, ajaxOptions, thrownError) {\r\n                console.log(\"failed!\");\r\n                //show failure popup\r\n                context.props.setPopupState({\r\n                    popup1: {\r\n                        show: true,\r\n                        title: 'Failed to reload',\r\n                        content: 'Unable to connect to server or the server has an internal error!',\r\n                        mode: 'admin',\r\n                        hasCloseBtn: true,\r\n                    }\r\n                }, \"Alertmanager_Config\");\r\n            },complete: function(){\r\n                /*setTimeout(function(){\r\n                    //remove spinner popup\r\n                    context.props.setPopupState({\r\n                        popup1: {\r\n                            show: false,\r\n                            title: '',\r\n                            content: '',\r\n                            mode: 'common',\r\n                            hasCloseBtn: true,\r\n                        }\r\n                    }, \"Alertmanager_Config\");\r\n                }, 500);*/\r\n            }\r\n        });\r\n    }\r\n\r\n    displayFileContents(fileContents){\r\n        let context = this;\r\n        this.setState({\r\n            fileContents: fileContents,\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='MainContentWrapper'>\r\n                <p className='MainContentTitle2'>Alertmanager Config</p>\r\n                <div className='MainContentBody'>\r\n                    <div id='parameters-table-div'>\r\n                        <Editor\r\n                            value={this.state.fileContents}\r\n                            onValueChange={code => this.onChange(code)}\r\n                            highlight={code => function(){} }\r\n                            padding={10}\r\n                            style={{\r\n                              fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n                              fontSize: 14,\r\n                              backgroundColor:'#fafafa',\r\n                              height: '90%',\r\n                              color:'black'\r\n                            }}\r\n                        />\r\n                        <button className='BlueSubmitBtn' id='uploadBtn'\r\n                            style={{float:'right', marginLeft:'10px'}}\r\n                            onClick={this.reloadServiceConfirmation.bind(this)}\r\n                        >\r\n                        Apply draft and Reload Alertmanager\r\n                        </button>\r\n                        <button className='GreenSubmitBtn' id='uploadBtn'\r\n                            style={{float:'right', marginLeft:'10px'}}\r\n                            onClick={this.uploadDataConfirmation.bind(this)}\r\n                        >\r\n                        Save draft\r\n                        </button>\r\n                        <button className='GreySubmitBtn' id='uploadBtn'\r\n                            style={{float:'right', marginLeft:'10px'}}\r\n                            onClick={function(){this.alertmanagerConfigApiQueue_retrieveData(0)}.bind(this)}\r\n                        >\r\n                        Retrieve saved draft\r\n                        </button>\r\n                        <button className='GreySubmitBtn' id='uploadBtn'\r\n                            style={{float:'right'}}\r\n                            onClick={function(){this.alertmanagerConfigApiQueue_retrieveData(1)}.bind(this)}\r\n                        >\r\n                        Retrieve last applied config\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n//import $ from 'jquery';\r\n//import SETTINGS from '../../../settings';\r\nimport Prometheus_Endpoints from './Prometheus_Endpoints';\r\nimport Prometheus_Rules from './Prometheus_Rules';\r\nimport AlertManager_Config from './Alertmanager_Config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './SystemSettings.css';\r\n\r\n\r\nexport default class SystemSettings extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.makeSelection = this.makeSelection.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t    isDisplaying: false,\r\n\t\t    displayTimestamp: Date.now(),\r\n\t\t    nav: {\r\n\t\t        prometheus_endpoints_selected: false,\r\n\t\t        prometheus_rules_selected: false,\r\n\t\t        alertmanager_config_selected: false,\r\n\t\t    },\r\n\t\t};\r\n\t}\r\n\r\n    componentDidUpdate(){\r\n        if (typeof(this.props.globalState) !== 'undefined'){\r\n            if (typeof(this.props.globalState.nav) !== 'undefined'){\r\n                if (this.props.globalState.nav.systemSettings_selected !== this.state.isDisplaying){\r\n                    this.setState({\r\n                        isDisplaying : this.props.globalState.nav.systemSettings_selected,\r\n                        displayTimestamp: Date.now(),\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    makeSelection(selection){\r\n        var newnav = {};\r\n        for (var key in this.state.nav){\r\n            newnav[key] = false;\r\n        }\r\n        switch(selection.target.id){\r\n            case \"nav_prometheus_endpoints\":\r\n                if (!this.state.nav.prometheus_endpoints_selected){\r\n                    newnav.prometheus_endpoints_selected = true;\r\n                }\r\n                this.setState({\r\n                    nav: newnav,\r\n                });\r\n                break;\r\n            case \"nav_prometheus_rules\":\r\n                if (!this.state.nav.prometheus_rules_selected){\r\n                    newnav.prometheus_rules_selected = true;\r\n                }\r\n                this.setState({\r\n                    nav: newnav,\r\n                });\r\n                break;\r\n            case \"nav_alertmanager_config\":\r\n                if (!this.state.nav.alertmanager_config_selected){\r\n                    newnav.alertmanager_config_selected = true;\r\n                }\r\n                this.setState({\r\n                    nav: newnav,\r\n                });\r\n                break;\r\n            default:\r\n                console.log(\"Wrong Nav Selection!\");\r\n\t    }\r\n    }\r\n\r\n    getButtonClass(id){\r\n        let classname = '';\r\n        if (typeof(this.state.nav) !== 'undefined'){\r\n            switch(id){\r\n                case \"nav_prometheus_endpoints\":\r\n                    if (this.state.nav.prometheus_endpoints_selected){\r\n                        classname = 'AdminNavigationBtn NavigationBtnActive ';\r\n                    }else{\r\n                        classname = 'AdminNavigationBtn ';\r\n                    }\r\n                    if (!this.state.isDisplaying){\r\n                        classname += 'MenuBtn-SlideOut ';\r\n                    }\r\n                    break;\r\n                case \"nav_prometheus_rules\":\r\n                    if (this.state.nav.prometheus_rules_selected){\r\n                        classname = 'AdminNavigationBtn NavigationBtnActive ';\r\n                    }else{\r\n                        classname = 'AdminNavigationBtn ';\r\n                    }\r\n                    if (!this.state.isDisplaying){\r\n                        classname += 'MenuBtn-SlideOut ';\r\n                    }\r\n                    break;\r\n                case \"nav_alertmanager_config\":\r\n                    if (this.state.nav.alertmanager_config_selected){\r\n                        classname = 'AdminNavigationBtn NavigationBtnActive ';\r\n                    }else{\r\n                        classname = 'AdminNavigationBtn ';\r\n                    }\r\n                    if (!this.state.isDisplaying){\r\n                        classname += 'MenuBtn-SlideOut ';\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.log(\"Unhandled case!\");\r\n                    break;\r\n            }\r\n        }\r\n        return classname;\r\n    }\r\n\r\n    getButtonStyle(idx){\r\n        let style = {\r\n            transitionDelay: (idx * 0.1) + 's',\r\n            transitionDuration: (idx*0.1 + 1.2) + 's',\r\n            transitionProperty: 'transform',\r\n        };\r\n        return style;\r\n    }\r\n\r\n    getDivClass(id){\r\n        let className = 'system-settings-content-div ';\r\n        if (!this.state.nav[id + '_selected']){\r\n            className += 'system-settings-content-div-SlideOut ';\r\n        }\r\n        return className;\r\n    }\r\n\r\n    renderMenuBars(){\r\n        return (\r\n            <div id='system-settings-menu'>\r\n                <button className={this.getButtonClass('nav_prometheus_endpoints')} id='nav_prometheus_endpoints' onClick={this.makeSelection} style={this.getButtonStyle(1)} >\r\n                    <FontAwesomeIcon style={{fontSize:'1.6em',float:'left', position:'relative', marginRight:'10px'}} icon={'map-marker-alt'} />\r\n                    Prometheus Endpoints\r\n                </button>\r\n\r\n                <button className={this.getButtonClass('nav_prometheus_rules')} id='nav_prometheus_rules' onClick={this.makeSelection} style={this.getButtonStyle(2)} >\r\n                    <FontAwesomeIcon style={{fontSize:'1.6em',float:'left', position:'relative', marginRight:'10px'}} icon={'exclamation-triangle'} />\r\n                    Prometheus Rules\r\n                </button>\r\n\r\n                <button className={this.getButtonClass('nav_alertmanager_config')} id='nav_alertmanager_config' onClick={this.makeSelection} style={this.getButtonStyle(3)} >\r\n                    <FontAwesomeIcon style={{fontSize:'1.6em',float:'left', position:'relative', marginRight:'10px'}} icon={'cogs'} />\r\n                    Alertmanager Config\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderContent(){\r\n        return (\r\n            <div id='system-settings-content-wrapper'>\r\n                <div className={this.getDivClass('prometheus_endpoints')}>\r\n                <Prometheus_Endpoints style={{position:'absolute'}}\r\n                    setGlobalState={this.props.setGlobalState}\r\n                    setPopupState={this.props.setPopupState}\r\n                    globalState={this.props.globalState}\r\n                    systemSettingsNavState={this.state.nav}/>\r\n                </div>\r\n                <div className={this.getDivClass('prometheus_rules')}>\r\n                <Prometheus_Rules\r\n                    setGlobalState={this.props.setGlobalState}\r\n                    setPopupState={this.props.setPopupState}\r\n                    globalState={this.props.globalState}\r\n                    systemSettingsNavState={this.state.nav}/>\r\n                </div>\r\n                <div className={this.getDivClass('alertmanager_config')}>\r\n                <AlertManager_Config\r\n                    setGlobalState={this.props.setGlobalState}\r\n                    setPopupState={this.props.setPopupState}\r\n                    globalState={this.props.globalState}\r\n                    systemSettingsNavState={this.state.nav}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='MainContentWrapper'>\r\n                <p className='MainContentTitle'>System Settings</p>\r\n                <div className='MainContentBody'>\r\n                    {this.renderMenuBars()}\r\n                    {this.renderContent()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport $ from 'jquery';\r\nimport SETTINGS from '../../../settings';\r\nimport './AccountSettings.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default class AccountSettings extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t    isDisplaying: false,\r\n\t\t    displayTimestamp: Date.now(),\r\n\t\t    changePassword: {\r\n                showChangePassword: false,\r\n                secrets: {},\r\n\t\t    }\r\n\t\t};\r\n\t}\r\n\r\n    handleChangePasswordBtnClick(){\r\n        //clear secret inputs\r\n        $('input.passwordChangeElement').each(function(index){ $(this).val(''); });\r\n\r\n        this.setState(prevState =>({\r\n            changePassword: {\r\n                ...prevState.changePassword,\r\n                showChangePassword: !prevState.changePassword.showChangePassword,\r\n            }\r\n        }));\r\n    }\r\n\r\n    handleChangePasswordSubmitClick(event){\r\n        event.preventDefault();\r\n\r\n        let secrets = {\r\n            oldPassword: $('#password_old')[0].value,\r\n            newPassword: $('#password_new')[0].value,\r\n            newPassword2: $('#password_new2')[0].value,\r\n        }\r\n\r\n        if (secrets.oldPassword === ''\r\n            || secrets.newPassword === ''\r\n            || secrets.newPassword2 === ''){\r\n            //Show notification in popup\r\n            this.props.setPopupState({\r\n                popup1: {\r\n                    show: true,\r\n                    title: 'Notification',\r\n                    content: 'All fields are required!',\r\n                    mode: 'common',\r\n                    hasCloseBtn: true,\r\n                }\r\n            }, \"AccountSettings\");\r\n            return;\r\n        }\r\n\r\n        if (secrets.newPassword !== secrets.newPassword2){\r\n            //Show notification in popup\r\n            this.props.setPopupState({\r\n                popup1: {\r\n                    show: true,\r\n                    title: 'Notification',\r\n                    content: 'New passwords do not match!',\r\n                    mode: 'common',\r\n                    hasCloseBtn: true,\r\n                }\r\n            }, \"AccountSettings\");\r\n            return;\r\n        }\r\n\r\n        if (secrets.oldPassword === secrets.newPassword){\r\n            //Show notification in popup\r\n            this.props.setPopupState({\r\n                popup1: {\r\n                    show: true,\r\n                    title: 'Notification',\r\n                    content: 'New password must be different from old password!',\r\n                    mode: 'common',\r\n                    hasCloseBtn: true,\r\n                }\r\n            }, \"AccountSettings\");\r\n            return;\r\n        }\r\n\r\n        this.setState(prevState => ({\r\n            changePassword: {\r\n                ...prevState.changePassword,\r\n                secrets: secrets,\r\n            }\r\n        }));\r\n        this.props.setPopupState({\r\n            popupConfirmation: {\r\n                show: true,\r\n                title: 'Proceed to change password?',\r\n                yesCallback: this.changePassword.bind(this),\r\n                yesButtonValue: '',\r\n                noCallback: 'close',\r\n                noButtonValue: '',\r\n                mode: 'common',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"AccountSettings\");\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if (typeof(this.props.globalState) !== 'undefined'){\r\n            if (typeof(this.props.globalState.nav) !== 'undefined'){\r\n                if (this.props.globalState.nav.accountSettings_selected !== this.state.isDisplaying){\r\n                    this.setState({\r\n                        isDisplaying : this.props.globalState.nav.accountSettings_selected,\r\n                        displayTimestamp: Date.now(),\r\n                    });\r\n\r\n                    if (!this.props.globalState.nav.accountSettings_selected){\r\n                        //clear secret inputs\r\n                        $('input.passwordChangeElement').each(function(index){ $(this).val(''); });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    changePassword(){\r\n        //secrets should already be stored in state\r\n        //clear secret inputs\r\n        $('input.passwordChangeElement').each(function(index){ $(this).val(''); });\r\n\r\n        //Show spinner in popup\r\n        this.props.setPopupState({\r\n            popupConfirmation:{\r\n                show: false,\r\n            },\r\n            popup1: {\r\n                show: true,\r\n                title: 'Loading',\r\n                content: <FontAwesomeIcon icon=\"spinner\" spin style={{fontSize: '2em', margin: 'auto', display: 'block'}}/>,\r\n                mode: 'common',\r\n                hasCloseBtn: false,\r\n            }\r\n        }, \"AccountSettings\");\r\n\r\n\t\tlet payload = {\r\n\t\t\tsession_key: window.localStorage['session_key'],\r\n\t\t\told_password: this.state.changePassword.secrets.oldPassword,\r\n\t\t\tnew_password: this.state.changePassword.secrets.newPassword,\r\n\t\t}\r\n\r\n\t\tlet context = this;\r\n\t\t$.ajax({\r\n\t\t\ttype: \"POST\",\r\n\t\t\turl: SETTINGS.BACKEND_WS_CHANGE_PASSWORD,\r\n\t\t\tdata: JSON.stringify(payload),\r\n\t\t\tcache: false,\r\n\t\t\tdataType: 'json',\r\n            contentType: 'application/json',\r\n\t\t\tsuccess: function(data){\r\n\t\t\t\tif (data.status === \"success\"){\r\n\t\t\t\t    //let res = JSON.parse(data.res);\r\n                    //Show notification in popup\r\n                    context.props.setPopupState({\r\n                        popup1: {\r\n                            show: true,\r\n                            title: 'Notification',\r\n                            content: 'Password changed',\r\n                            mode: 'common',\r\n                            hasCloseBtn: true,\r\n                        }\r\n                    }, \"AccountSettings\");\r\n\r\n                    context.handleChangePasswordBtnClick();\r\n\r\n\t\t\t\t}else{\r\n\t\t\t\t    let res = JSON.parse(data.res);\r\n\t\t\t\t    const feedback = (\r\n\t\t\t\t        <div>\r\n                            <span>{(res['error_code'] !== 0 ? \"Error: \" + res['error_code'] + \", \": \" \")}\r\n                            {(typeof(res['status']) !== \"undefined\" ? res['status'] : \"\")}</span>\r\n\t\t\t\t        </div>\r\n\t\t\t\t    )\r\n\t\t\t\t    //Show notification in popup\r\n                    context.props.setPopupState({\r\n                        popup1: {\r\n                            show: true,\r\n                            title: 'Notification',\r\n                            content: feedback,\r\n                            mode: 'common',\r\n                            hasCloseBtn: true,\r\n                        }\r\n                    }, \"AccountSettings\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror: function (xhr, ajaxOptions, thrownError) {\r\n\t\t\t    //Show notification in popup\r\n                context.props.setPopupState({\r\n                    popup1: {\r\n                        show: true,\r\n                        title: 'Notification',\r\n                        content: 'Request failed',\r\n                        mode: 'common',\r\n                        hasCloseBtn: true,\r\n                    }\r\n                }, \"AccountSettings\");\r\n\t\t\t},\r\n\t\t\tcomplete: function () {\r\n\r\n\t\t\t},\r\n\r\n\t\t});\r\n    }\r\n\r\n    getDivClass(id){\r\n        let className = '';\r\n        switch(id){\r\n            case 'changePasswordContentDiv':\r\n                if (this.state.changePassword.showChangePassword){\r\n                    className = 'changePasswordContentDiv';\r\n                }else{\r\n                    className = 'changePasswordContentDiv changePasswordContentDiv-SlideUp';\r\n                }\r\n                break;\r\n            case 'changePasswordBtn':\r\n                if (this.state.changePassword.showChangePassword){\r\n                    className = 'changePasswordBtn-expanded';\r\n                }else{\r\n                    className = 'changePasswordBtn-collapsed';\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return className;\r\n    }\r\n\r\n    renderChangePasswordDiv(){\r\n        return (\r\n                <div className={this.getDivClass('changePasswordContentDiv')}>\r\n                    <form onSubmit={this.handleChangePasswordSubmitClick.bind(this)}>\r\n                        <input id='password_old' className='passwordChangeElement' type='password' placeholder='old password' /><br/>\r\n                        <input id='password_new' className='passwordChangeElement' type='password' placeholder='new password' /><br/>\r\n                        <input id='password_new2' className='passwordChangeElement' type='password' placeholder='repeat new password' /><br/>\r\n                        <button id='passwordChangeSubmit' className='passwordChangeElement' >Submit</button>\r\n                    </form>\r\n                </div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='MainContentWrapper'>\r\n                <p className='MainContentTitle'>Profile</p>\r\n                <div className='MainContentBody'>\r\n                    <div id='changePasswordDiv'>\r\n                        <button id='changePasswordBtn' className={this.getDivClass('changePasswordBtn')} onClick={this.handleChangePasswordBtnClick.bind(this)} >Change Password</button>\r\n                        <div id='changePasswordContentDivWrapper'>\r\n                            {this.renderChangePasswordDiv()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './MainBody.css';\nimport coverphoto from '../../images/coverphoto.jpg';\n//import $ from 'jquery';\n//import SETTINGS from '../../settings';\nimport SystemSettings from './SystemSettings/SystemSettings';\nimport AccountSettings from './AccountSettings/AccountSettings';\n\nexport default class MainBody extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            initialized: false,\n        };\n    }\n\n    componentDidUpdate(){\n        if (typeof(this.props.globalState) !== 'undefined'){\n            if (typeof(this.props.globalState.nav) !== 'undefined' && !this.state.initialized){\n                for (let key in this.props.globalState.nav){\n                    if (this.props.globalState.nav[key]){\n                        this.setState({\n                            initialized: true,\n                        });\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    determineClass(id){\n        let className = '';\n        if (typeof(this.props.globalState.nav) !== 'undefined'){\n            switch(id){\n                case \"AccountSettingsContainer\":\n                    if (typeof(this.props.globalState.nav.accountSettings_selected) !== \"undefined\"){\n                        if(this.props.globalState.nav.accountSettings_selected){\n                            className += 'ContentContainer ';\n                        }else{\n                            className += 'ContentContainer ContentContainer-SlideOut ';\n                            if (!this.state.initialized){\n                                className += 'NoTransformationDuration ';\n                            }\n                        }\n                    }\n                    break;\n                case \"SystemSettingsContainer\":\n                    if (typeof(this.props.globalState.nav.systemSettings_selected) !== \"undefined\"){\n                        if(this.props.globalState.nav.systemSettings_selected){\n                            className += 'AdminContentContainer ';\n                        }else{\n                            className += 'AdminContentContainer ContentContainer-SlideOut ';\n                            if (!this.state.initialized){\n                                className += 'NoTransformationDuration ';\n                            }\n                        }\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        return className;\n    }\n\n    render(){\n        return (\n            <div id='MainContentContainer'>\n                <img id=\"coverphoto\" src={coverphoto} alt=\"\"/>\n\n                <div id='SystemSettingsContainer' className={this.determineClass('SystemSettingsContainer')}>\n                    <SystemSettings\n                        setGlobalState={this.props.setGlobalState}\n                        setPopupState={this.props.setPopupState}\n                        globalState={this.props.globalState} />\n                </div>\n\n                <div id='AccountSettingsContainer' className={this.determineClass('AccountSettingsContainer')}>\n                    <AccountSettings\n                        setGlobalState={this.props.setGlobalState}\n                        setPopupState={this.props.setPopupState}\n                        globalState={this.props.globalState} />\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\r\nimport $ from 'jquery';\r\nimport { Redirect } from 'react-router-dom';\r\nimport SETTINGS from '../../settings';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default class Logout extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.logout = this.logout.bind(this);\r\n\t\tthis.state = {\r\n\t\t\tredirect: (window.localStorage['session_key'] === \"\" ? true : false)\r\n\t\t};\r\n\t}\r\n\r\n\tlogout(){\r\n\t\tlet payload = {\r\n\t\t\tsession_key: window.localStorage['session_key']\r\n\t\t}\r\n\t\tlet context = this;\r\n\t\t$.ajax({\r\n\t\t\ttype: \"POST\",\r\n\t\t\turl: SETTINGS.BACKEND_WS_LOGOUT_URL,\r\n\t\t\tdata: JSON.stringify(payload),\r\n\t\t\tcache: false,\r\n\t\t\tdataType: 'json',\r\n            contentType: 'application/json',\r\n\t\t\tsuccess: function(data){\r\n\t\t\t\tif (data.status === \"success\"){\r\n\t\t\t\t    window.localStorage['session_key'] = \"\";\r\n\t\t\t\t\tcontext.setState({\r\n\t\t\t\t\t\tredirect: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror: function (xhr, ajaxOptions, thrownError) {\r\n\t\t\t\tconsole.log(\"failed!\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\trenderRedirect(){\r\n\t\tif (this.state.redirect) {\r\n\t\t\treturn <Redirect to='/' />\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n            <div id='logoutContainer'>\r\n                {this.renderRedirect()}\r\n\r\n                <button id='logoutBtn' onClick={this.logout}>\r\n                    <FontAwesomeIcon style={{fontSize:'1.1em', marginRight:'10px'}} icon={'door-open'} />\r\n                    Sign out\r\n                </button>\r\n            </div>\r\n\t\t)\r\n\t}\r\n\r\n\r\n}","import React from 'react';\r\n\r\nexport default class Clock extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t    time: new Date().toLocaleString('en-GB'),\r\n\t\t};\r\n\t}\r\n\r\n    componentDidMount() {\r\n        this.intervalID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            time: new Date().toLocaleString('en-GB')\r\n        });\r\n    }\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div id='clockdiv'>\r\n                <p id='clock' style={{margin:'0px'}}>{this.state.time}</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\r\n}","import React from 'react';\r\n//import $ from 'jquery';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default class NavigationMenu extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.makeSelection = this.makeSelection.bind(this);\r\n\t\tthis.getButtonClass = this.getButtonClass.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t    //Reset selections\r\n\t    this.props.setGlobalState({\r\n\t        nav: {\r\n                accountSettings_selected: false,\r\n                systemSettings_selected: false,\r\n            },\r\n        }, \"NavigationMenu\");\r\n\t}\r\n\r\n    makeSelection(selection){\r\n        var newnav = {};\r\n        for (var key in this.props.globalState.nav){\r\n            newnav[key] = false;\r\n        }\r\n        switch(selection.target.id){\r\n            case \"nav_accountSettings\":\r\n                if (!this.props.globalState.nav.accountSettings_selected){\r\n                    newnav.accountSettings_selected = true;\r\n                }\r\n                this.props.setGlobalState({\r\n                    nav: newnav,\r\n                }, \"NavigationMenu\");\r\n                break;\r\n            case \"nav_systemSettings\":\r\n                if (!this.props.globalState.nav.systemSettings_selected){\r\n                    newnav.systemSettings_selected = true;\r\n                }\r\n                this.props.setGlobalState({\r\n                    nav: newnav,\r\n                }, \"NavigationMenu\");\r\n                break;\r\n            default:\r\n                console.log(\"Wrong Nav Selection!\");\r\n\t    }\r\n    }\r\n\r\n\trenderRedirect(){\r\n\t\tif (this.state.redirect) {\r\n\t\t\treturn <Redirect to='/login' />\r\n\t\t}\r\n\t}\r\n\r\n    getButtonClass(id){\r\n        let classname = '';\r\n        if (typeof(this.props.globalState.nav) !== 'undefined'){\r\n            switch(id){\r\n                case \"nav_accountSettings\":\r\n                    if (this.props.globalState.nav.accountSettings_selected){\r\n                        classname = 'NavigationBtn NavigationBtnActive';\r\n                    }else{\r\n                        classname = 'NavigationBtn';\r\n                    }\r\n                    break;\r\n                case \"nav_systemSettings\":\r\n                    if (this.props.globalState.nav.systemSettings_selected){\r\n                        classname =  'AdminNavigationBtn NavigationBtnActive';\r\n                    }else{\r\n                        classname =  'AdminNavigationBtn';\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.log(\"Unhandled case!\");\r\n                    break;\r\n            }\r\n        }\r\n        return classname;\r\n    }\r\n\r\n    renderAccountSettings(){\r\n        return (\r\n            <button className={this.getButtonClass('nav_accountSettings')} id='nav_accountSettings' onClick={this.makeSelection} >\r\n                <FontAwesomeIcon style={{fontSize:'1.6em',float:'left', position:'relative', marginRight:'10px', color:'white'}} icon={'id-card'} />\r\n                Profile\r\n            </button>\r\n        )\r\n    }\r\n    renderSystemSettings(){\r\n        if (this.props.globalState.is_admin){\r\n            return (\r\n                <button className={this.getButtonClass('nav_systemSettings')} id='nav_systemSettings' onClick={this.makeSelection} >\r\n                    <FontAwesomeIcon style={{fontSize:'1.6em',float:'left', position:'relative', marginRight:'10px'}} icon={'sliders-h'} />\r\n                    System Settings\r\n                </button>\r\n            )\r\n        }\r\n    }\r\n\r\n\trender(){\r\n\t\treturn (\r\n            <div id='NavigationMenuContainer'>\r\n                {this.renderSystemSettings()}\r\n                {this.renderAccountSettings()}\r\n            </div>\r\n\t\t)\r\n\t}\r\n}","import React from 'react';\n//import SETTINGS from '../../settings';\nimport './SidePane.css';\nimport {Route} from 'react-router-dom';\nimport Logout from './Logout';\nimport Clock from './Clock';\nimport NavigationMenu from './NavigationMenu';\n\nexport default class SidePane extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <Route exact={true} path='/main' render={() => (\n                    <div>\n                        <div>\n                            <Logout\n                                setGlobalState={this.props.setGlobalState}\n                                setPopupState={this.props.setPopupState}\n                                globalState={this.props.globalState}/>\n                            <Clock\n                                setGlobalState={this.props.setGlobalState}\n                                setPopupState={this.props.setPopupState}\n                                globalState={this.props.globalState}/>\n                        </div>\n                        <hr/>\n                        <NavigationMenu\n                            setGlobalState={this.props.setGlobalState}\n                            setPopupState={this.props.setPopupState}\n                            globalState={this.props.globalState}/>\n                    </div>\n                )}/>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport $ from 'jquery';\nimport SETTINGS from '../settings';\nimport socketIOClient from \"socket.io-client\";\n\nexport default class BackgroundService extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t};\n\t}\n\n    socket = null;\n\n    componentDidMount(){\n        this.socket = socketIOClient(SETTINGS.WEB_SOCKET_URL);\n        this.socket.on(\"server has update\", data => this.handleServerHasUpdate(data));\n    }\n\n    handleServerHasUpdate(data){\n        data = JSON.parse(data);\n\n        switch(data.hasUpdate){\n            case 'prometheus_endpoints':\n                this.props.setGlobalState({\n                    'socket_prometheus_endpoints_updated': true,\n                }, \"BackgroundService\");\n                break;\n            case 'prometheus_rules':\n                this.props.setGlobalState({\n                    'socket_prometheus_rules_updated': true,\n                }, \"BackgroundService\");\n                break;\n            case 'alertmanager_config':\n                this.props.setGlobalState({\n                    'socket_alertmanager_config_updated': true,\n                }, \"BackgroundService\");\n                break;\n            default:\n                break;\n        }\n    }\n\n    getRoomInfo(){\n        let payload = {\n            session_key: window.localStorage['session_key'],\n        }\n\n        let context = this;\n        $.ajax({\n            type: \"POST\",\n            url: SETTINGS.BACKEND_WS_GET_ROOMS_LIST,\n            data: JSON.stringify(payload),\n            cache: false,\n            dataType: 'json',\n            contentType: 'application/json',\n            success: function(data){\n                if (data.status === \"success\"){\n                    let res = JSON.parse(data.res);\n                    context.processRoomData(res.status);\n                }else{\n                    setTimeout(function(){context.getRoomInfo();}, 5000)   //retry\n                }\n            },\n            error: function (xhr, ajaxOptions, thrownError) {\n                console.log(\"failed!\");\n                setTimeout(function(){context.getRoomInfo();}, 5000)   //retry\n            },complete: function(){\n\n            }\n        });\n    }\n\n    processRoomData(data){\n        this.props.setGlobalState({'roomlist': data}, \"BackgroundService\");\n    }\n\n    render(){\n        return '';\n    }\n}","import React from 'react';\n//import $ from 'jquery';\n//import SETTINGS from '../../settings';\nimport Popup from 'reactjs-popup';\nimport './PopupService.css';\n\n//Handles all popups through global state\nexport default class PopupService extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\t//expected popup state\n\t\t/*\n\t\t    this.props.popupState = {\n                popup1: {\n                    show: false,\n                    title: '',\n                    content: '',\n                    mode: 'admin'/'common',\n                    hasCloseBtn: false,\n                },\n                popup2: {\n                    show: false,\n                    title: '',\n                    content: '',\n                    mode: 'admin'/'common',\n                    hasCloseBtn: false,\n                },\n                popupConfirmation: {\n                    show: false,\n                    title: '',\n                    yesCallback: f()/'',\n                    yesButtonValue: '',\n                    noCallback: f()/'',\n                    noButtonValue: '',\n                    mode: 'admin'/'common',\n                    hasCloseBtn: false,\n                },\n\t\t    }\n\t\t*/\n        this.state={};\n\t}\n\n    closePopup1(){\n        var tmpState = {...this.props.popupState.popup1};\n        tmpState.show = false;\n        tmpState.title = '';\n        tmpState.content = '';\n        tmpState.mode = '';\n        tmpState.hasCloseBtn = false;\n\n        this.props.setPopupState({\n            popup1: tmpState,\n        }, 'PopupService');\n    }\n    closePopup2(){\n        var tmpState = {...this.props.popupState.popup2};\n        tmpState.show = false;\n        tmpState.title = '';\n        tmpState.content = '';\n        tmpState.mode = '';\n        tmpState.hasCloseBtn = false;\n\n        this.props.setPopupState({\n            popup2: tmpState,\n        }, 'PopupService');\n    }\n    closePopupConfirmation(){\n        var tmpState = {...this.props.popupState.popupConfirmation};\n        tmpState.show = false;\n        tmpState.title = '';\n        tmpState.yesCallback = '';\n        tmpState.yesButtonValue = '';\n        tmpState.noCallback = '';\n        tmpState.noButtonValue = '';\n        tmpState.mode = '';\n        tmpState.hasCloseBtn = false;\n\n        this.props.setPopupState({\n            popupConfirmation: tmpState,\n        }, 'PopupService');\n    }\n\n    renderPopup(popupState, xBtnCallback){\n        let headerClass = '';\n        let contentClass = '';\n        if (popupState.mode === 'common'){\n            headerClass = 'modal-header-common';\n            contentClass = 'modal-content-common';\n        }else if (popupState.mode === 'admin'){\n            headerClass = 'modal-header-admin';\n            contentClass = 'modal-content-admin';\n        }\n\n        return (\n            <>\n                {this.renderXBtn(popupState.hasCloseBtn, xBtnCallback)}\n                <div className={headerClass}> {popupState.title} </div>\n                <div className={contentClass}>\n                    {popupState.content}\n                </div>\n            </>\n        );\n    }\n\n    renderXBtn(enable, xBtnCallback){\n        if (enable){\n            return (\n                <input type={'button'} className={'xbtn'} onClick={xBtnCallback} style={{fontWeight:'bold'}} value={'X'}/>\n            );\n        }\n    }\n\n    renderPopupConfirmation(popupState, xBtnCallback){\n        let headerClass = '';\n        let contentClass = '';\n        if (popupState.mode === 'common'){\n            headerClass = 'modal-header-common';\n            contentClass = 'modal-content-common';\n        }else if (popupState.mode === 'admin'){\n            headerClass = 'modal-header-admin';\n            contentClass = 'modal-content-admin';\n        }\n\n        if (popupState.noCallback === 'close'){\n            popupState.noCallback = xBtnCallback;\n        }\n\n        return (\n            <>\n                {this.renderXBtn(popupState.hasCloseBtn, xBtnCallback)}\n                <div className={headerClass}> {popupState.title} </div>\n                <div className={contentClass}>\n                    <button className={\"modal-submit-btn\"} id={\"yesBtn\"} onClick={popupState.yesCallback} value={popupState.yesButtonValue}>Yes</button>\n                    <button className={\"modal-submit-btn\"} id={\"noBtn\"} onClick={popupState.noCallback} value={popupState.noButtonValue}>No</button>\n                </div>\n            </>\n        );\n    }\n\n    render(){\n        return (\n            <div>\n                <Popup open={this.props.popupState.popup1.show}\n                    onClose={this.closePopup1.bind(this)}\n                    closeOnDocumentClick={false}\n                    contentStyle={{ borderRadius:'10px', border: 'none', padding: '0', background: '#282828', width: 'auto' }}>\n                    <div>\n                        {this.renderPopup(\n                            this.props.popupState.popup1,\n                            this.closePopup1.bind(this)\n                        )}\n                    </div>\n                </Popup>\n                <Popup open={this.props.popupState.popup2.show}\n                    onClose={this.closePopup2.bind(this)}\n                    closeOnDocumentClick={false}\n                    contentStyle={{ borderRadius:'10px', border: 'none', padding: '0', background: '#282828', width: 'auto' }}>\n                    <div>\n                        {this.renderPopup(\n                            this.props.popupState.popup2,\n                            this.closePopup2.bind(this)\n                        )}\n                    </div>\n                </Popup>\n                <Popup open={this.props.popupState.popupConfirmation.show}\n                    onClose={this.closePopupConfirmation.bind(this)}\n                    closeOnDocumentClick={false}\n                    contentStyle={{ borderRadius:'10px', border: 'none', padding: '0', background: '#282828', width: 'auto' }}>\n                    <div>\n                        {this.renderPopupConfirmation(\n                            this.props.popupState.popupConfirmation,\n                            this.closePopupConfirmation.bind(this)\n                        )}\n                    </div>\n                </Popup>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport $ from 'jquery';\nimport { Redirect } from 'react-router-dom';\nimport SETTINGS from '../settings';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default class Session extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tredirectToLoginPage: false,\n\t\t};\n\t\tthis.checkSessionKey = this.checkSessionKey.bind(this);\n\t}\n\n    componentDidMount(){\n        if (!this.props.globalState.session_checked){\n            this.checkSessionKey();\n        }\n    }\n\n\tcheckSessionKey(){\n\t    if (typeof(window.localStorage['session_key']) !== \"undefined\" && window.localStorage['session_key'] !== ''){\n\t        let payload = {\n                session_key: window.localStorage['session_key']\n            }\n            let context = this;\n\n            //Show spinner in popup\n            this.props.setPopupState({\n                popup1: {\n                    show: true,\n                    title: 'Loading',\n                    content: <FontAwesomeIcon icon=\"spinner\" spin style={{fontSize: '2em', margin: 'auto', display: 'block'}}/>,\n                    mode: 'common',\n                    hasCloseBtn: false,\n                }\n            }, \"Session\");\n\n            $.ajax({\n                type: \"POST\",\n                url: SETTINGS.BACKEND_WS_VALIDATE_SESSION_URL,\n                data: JSON.stringify(payload),\n                cache: false,\n                dataType: 'json',\n                contentType: 'application/json',\n                success: function(data){\n                    if (data.status === \"success\"){\n                        let res = JSON.parse(data.res);\n                        if (res['username'] !== ''){\n                            context.props.setGlobalState({\n                                is_admin: res['is_admin'],\n                                username: res['username'],\n                                session_checked: true,\n                            }, \"Session\");\n\n                            //close spinner\n                            context.props.setPopupState({\n                                popup1: {\n                                    show: false,\n                                    title: '',\n                                    content: '',\n                                    mode: 'common',\n                                    hasCloseBtn: false,\n                                }\n                            }, \"Session\");\n                        }else{\n                            setTimeout(function(){\n                                console.log('rechecking session...');\n                                context.checkSessionKey();\n                            }, 2000);   //retry\n                        }\n                    }else{\n                        console.log('session check failed');\n                        window.localStorage['session_key'] = \"\";\n                        context.setState({\n                            redirectToLoginPage: true\n                        });\n                    }\n                },\n                error: function (xhr, ajaxOptions, thrownError) {\n                    console.log(\"session check error!\");\n                    window.localStorage['session_key'] = \"\";\n                    context.setState({\n                        redirectToLoginPage: true\n                    });\n                }\n            });\n\t    }else{\n\t        this.setState({\n                redirectToLoginPage: true\n            });\n\t    }\n\t}\n\n\trenderRedirect(){\n\t\tif (this.state.redirectToLoginPage) {\n\t\t\treturn <Redirect to='/' />\n\t\t}\n\t}\n\t\n\trender(){ \n\t\treturn (\n\t\t\t<>\n\t\t\t\t{this.renderRedirect()}\n\t\t\t</>\n\t\t)\n\t}\n}","import React from 'react';\n//import $ from 'jquery';\nimport SETTINGS from './settings';\nimport './App.css';\nimport './lib/sb-admin/sb-admin-2.min.css';\nimport {BrowserRouter, Route} from 'react-router-dom';\n//import {Redirect} from 'react-router-dom';\n\nimport Login from './components/Login';\nimport MainBody from './components/MainBody/MainBody';\nimport SidePane from './components/SidePane/SidePane';\nimport BackgroundService from './components/BackgroundService';\nimport PopupService from './components/PopupService/PopupService';\nimport Session from './components/Session';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCheckSquare, faCoffee, faSpinner,\n            faPollH, faDoorOpen, faCalendarDay,\n            faCalendarWeek, faCalendar, faCalendarAlt,\n            faFileUpload, faIdCard, faLock,\n            faStar, faSlidersH, faFileDownload,\n            faCogs, faDownload, faEdit,\n            faMapMarkerAlt, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\n\n//add FA icons\nlibrary.add(faCheckSquare, faCoffee, faSpinner,\n            faPollH, faDoorOpen, faCalendarDay,\n            faCalendarWeek, faCalendar, faCalendarAlt,\n            faFileUpload, faIdCard, faLock,\n            faStar, faSlidersH, faFileDownload,\n            faCogs, faDownload, faEdit,\n            faMapMarkerAlt, faExclamationTriangle);\n\n\nexport default class App extends React.Component {\n    constructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t    session_checked: false,\n            popupState: {\n                popup1: {\n                    show: false,\n                    title: '',\n                    content: '',\n                    mode: '',\n                    hasCloseBtn: false,\n                },\n                popup2: {\n                    show: false,\n                    title: '',\n                    content: '',\n                    mode: '',\n                    hasCloseBtn: false,\n                },\n                popupConfirmation: {\n                    show: false,\n                    title: '',\n                    yesCallback: null,\n                    yesButtonValue: '',\n                    noCallback: null,\n                    noButtonValue: '',\n                    mode: '',\n                    hasCloseBtn: false,\n                },\n            }\n\t\t};\n\t}\n\n    // Callback function for children to pass back global states\n    setStateFromChild = (data, childname = \"\") => {\n        if (SETTINGS.MODE === \"DEVELOPMENT\") console.log(\"global state from \" + childname);\n        this.setState(data);\n    }\n\n    // Callback function for children to pass back popup states\n    setPopupStateFromChild = (data, childname = \"\") => {\n        if (SETTINGS.MODE === \"DEVELOPMENT\") console.log(\"popup state from \" + childname);\n        var tmpState = this.state.popupState; //reference\n        for (var key in data){\n            tmpState[key] = data[key];\n        }\n        this.setState({\n            popupState: tmpState,\n        });\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div>\n                    {/*<Redirect exact={true} from=\"/\" to=\"/login\" />*/}\n                    <Route exact={true} path='/' render={() => (\n                        <div className=\"Login Login-header\">\n                            <Login\n                                setGlobalState={this.setStateFromChild}\n                                globalState={this.state}/>\n                        </div>\n                    )}/>\n                    <Route exact={true} path='/main' render={() => (\n                        <div className=\"App App-header\">\n                            <Session\n                                setGlobalState={this.setStateFromChild}\n                                globalState={this.state}\n                                setPopupState={this.setPopupStateFromChild}/>\n                            <BackgroundService\n                                setGlobalState={this.setStateFromChild}\n                                setPopupState={this.setPopupStateFromChild}\n                                globalState={this.state}/>\n                            <div className=\"SidePane\">\n                                <SidePane\n                                    setGlobalState={this.setStateFromChild}\n                                    setPopupState={this.setPopupStateFromChild}\n                                    globalState={this.state}/>\n                            </div>\n                            <div className=\"MainContent\">\n                                <MainBody\n                                    setGlobalState={this.setStateFromChild}\n                                    setPopupState={this.setPopupStateFromChild}\n                                    popupState={this.state.popupState}\n                                    globalState={this.state}/>\n                            </div>\n                            <PopupService\n                                setPopupState={this.setPopupStateFromChild}\n                                popupState={this.state.popupState}/>\n                        </div>\n                    )}/>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/favicon.33d46e7c.ico\";","module.exports = __webpack_public_path__ + \"static/media/coverphoto.b3c0d98b.jpg\";","\r\nconst backend_server_url = extractServerUrl(window.location.href) + \":4000\";\r\nfunction extractServerUrl(url) {\r\n    var hostname = '';\r\n    var protocol = 'http://';\r\n    //find & remove protocol (http, ftp, etc.) and get hostname\r\n    if (url.indexOf(\"//\") > -1) {\r\n        protocol = url.split('/')[0] + \"//\";\r\n        hostname = url.split('/')[2];\r\n    }\r\n    else {\r\n        hostname = url.split('/')[0];\r\n    }\r\n    //find & remove port number\r\n    hostname = hostname.split(':')[0];\r\n    //find & remove \"?\"\r\n    hostname = hostname.split('?')[0];\r\n\r\n    return protocol + hostname;\r\n}\r\n\r\nconst SETTINGS = {\r\n    WEB_SOCKET_URL: backend_server_url,\r\n    BACKEND_SERVER_URL: backend_server_url,\r\n    MODE: \"DEVELOPMENT\", // DEVELOPMENT, PRODUCTION\r\n\r\n    //Web Service Endpoints\r\n    BACKEND_WS_LOGIN_URL: backend_server_url + \"/login\",\r\n    BACKEND_WS_LOGOUT_URL: backend_server_url + \"/logout\",\r\n    BACKEND_WS_VALIDATE_SESSION_URL: backend_server_url + \"/validate_session\",\r\n    BACKEND_WS_CHANGE_PASSWORD: backend_server_url + \"/change_password\",\r\n    BACKEND_WS_GET_FILE_CONTENTS: backend_server_url + \"/get_file_contents\",\r\n    BACKEND_WS_UPDATE_FILE_CONTENTS: backend_server_url + \"/update_file_contents\",\r\n    BACKEND_WS_RELOAD_SERVICE: backend_server_url + \"/reload_service\",\r\n\r\n    //Operation Settings\r\n    FIRST_AVAILABLE_HOUR: 9,\r\n    LAST_AVAILABLE_HOUR: 18,\r\n};\r\n\r\nmodule.exports = SETTINGS;"],"sourceRoot":""}